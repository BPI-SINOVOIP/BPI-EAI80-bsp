
/* auto-generated by gen_syscalls.py, don't edit */

#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall_macros.h>

#ifdef __cplusplus
extern "C" {
#endif

K_SYSCALL_DECLARE2(K_SYSCALL_FB_GET_DISPLAYINFO, fb_get_displayinfo, int, struct device *, dev, struct fb_displayinfo *, info);

K_SYSCALL_DECLARE4(K_SYSCALL_FB_IOCTL, fb_ioctl, int, struct device *, dev, uint8_t, layer_index, uint32_t, cmd, void *, arg);

K_SYSCALL_DECLARE2(K_SYSCALL_FB_FILL_RECT, fb_fill_rect, int, struct device *, dev, const struct fb_fillrect *, rect);

K_SYSCALL_DECLARE2(K_SYSCALL_FB_COPY_AREA, fb_copy_area, int, struct device *, dev, const struct fb_copyarea *, region);

K_SYSCALL_DECLARE3(K_SYSCALL_FB_LOAD_CLUT, fb_load_clut, int, struct device *, dev, uint32_t *, color, uint32_t, clut_size);

K_SYSCALL_DECLARE5(K_SYSCALL_FB_ALPHA_BLENDINGBULK, fb_alpha_blendingbulk, int, struct device *, dev, uint32_t *, fg_addr, uint32_t *, bg_addr, uint32_t *, dst, uint32_t, pixel_num);

K_SYSCALL_DECLARE5(K_SYSCALL_FB_MIX_COLORS, fb_mix_colors, int, struct device *, dev, uint32_t, fg_color, uint32_t, bg_color, uint8_t, alpha, uint32_t *, output_color);

K_SYSCALL_DECLARE7(K_SYSCALL_FB_CONVERT_COLOR, fb_convert_color, int, struct device *, dev, void *, src, void *, dst, uint32_t, src_pixfmt, uint32_t, dst_pixfmt, uint32_t, xsize, uint32_t, ysize);

K_SYSCALL_DECLARE2(K_SYSCALL_FB_MIX_COLORSBULK, fb_mix_colorsbulk, int, struct device *, dev, const struct fb_mixcolorbulk *, mixcolorbulk);

K_SYSCALL_DECLARE8(K_SYSCALL_FB_DRAW_BITMAPL8, fb_draw_bitmapl8, int, struct device *, dev, void *, src, void *, dst, uint32_t, offline_src, uint32_t, offline_dst, uint32_t, pixfmt, uint32_t, xsize, uint32_t, ysize);

K_SYSCALL_DECLARE2(K_SYSCALL_FB_SCALER, fb_scaler, int, struct device *, dev, const struct fb_scalerinfo *, param);

#ifdef __cplusplus
}
#endif

#endif
