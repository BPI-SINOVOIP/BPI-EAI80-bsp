
/* auto-generated by gen_syscalls.py, don't edit */

#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall_macros.h>

#ifdef __cplusplus
extern "C" {
#endif

K_SYSCALL_DECLARE1(K_SYSCALL_TIM_TIMEBASE_INIT, tim_timebase_init, int, struct device *, dev);

K_SYSCALL_DECLARE1(K_SYSCALL_TIM_OUTPUTCOMPARE_INIT, tim_outputcompare_init, int, struct device *, dev);

K_SYSCALL_DECLARE1(K_SYSCALL_TIM_PWM_INIT, tim_pwm_init, int, struct device *, dev);

K_SYSCALL_DECLARE1(K_SYSCALL_TIM_INPUTCAPTURE_INIT, tim_inputcapture_init, int, struct device *, dev);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_ONEPULSE_INIT, tim_onepulse_init, int, struct device *, dev, uint32_t, opm);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_ENCODER_INIT, tim_encoder_init, int, struct device *, dev, tim_encodeinit *, cfg);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_HALLSENSOR_INIT, tim_hallsensor_init, int, struct device *, dev, tim_hallsensorinit *, cfg);

K_SYSCALL_DECLARE1(K_SYSCALL_TIM_TIMEBASE_START, tim_timebase_start, int, struct device *, dev);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_OUTPUTCOMPARE_START, tim_outputcompare_start, int, struct device *, dev, uint32_t, ch);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_PWM_START, tim_pwm_start, int, struct device *, dev, uint32_t, ch);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_INPUTCAPTURE_START, tim_inputcapture_start, int, struct device *, dev, uint32_t, ch);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_ONEPULSE_START, tim_onepulse_start, int, struct device *, dev, uint32_t, ch);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_ENCODER_START, tim_encoder_start, int, struct device *, dev, uint32_t, ch);

K_SYSCALL_DECLARE1(K_SYSCALL_TIM_HALLSENSOR_START, tim_hallsensor_start, int, struct device *, dev);

K_SYSCALL_DECLARE3(K_SYSCALL_TIM_OCCHANNEL_CFG, tim_occhannel_cfg, int, struct device *, dev, tim_outputcompareinit *, cfg, uint32_t, ch);

K_SYSCALL_DECLARE3(K_SYSCALL_TIM_ICCHANNEL_CFG, tim_icchannel_cfg, int, struct device *, dev, tim_inputcaptureinit *, cfg, uint32_t, ch);

K_SYSCALL_DECLARE3(K_SYSCALL_TIM_PWMCHANNEL_CFG, tim_pwmchannel_cfg, int, struct device *, dev, tim_outputcompareinit *, cfg, uint32_t, ch);

K_SYSCALL_DECLARE4(K_SYSCALL_TIM_OPMCHANNEL_CFG, tim_opmchannel_cfg, int, struct device *, dev, tim_opminit *, cfg, uint32_t, ch1, uint32_t, ch2);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_MASTERSYN_CONGIG, tim_mastersyn_config, int, struct device *, dev, tim_mstconfig *, cfg);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_SLAVESYN_CONFIG, tim_slavesyn_config, int, struct device *, dev, tim_slvconfig *, cfg);

K_SYSCALL_DECLARE2(K_SYSCALL_TIM_BDT_CONFIG, tim_bdt_config, int, struct device *, dev, tim_bdtconfig *, cfg);

K_SYSCALL_DECLARE4(K_SYSCALL_TIM_PIN_SET, tim_pin_set, int, struct device *, dev, uint32_t, pwm, uint32_t, period_cycles, uint32_t, pulse_cycles);
#ifdef __cplusplus
}
#endif

#endif
