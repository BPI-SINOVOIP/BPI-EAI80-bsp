
/* auto-generated by gen_syscalls.py, don't edit */

#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall_macros.h>

#ifdef __cplusplus
extern "C" {
#endif

K_SYSCALL_DECLARE4(K_SYSCALL_GPIO_CONFIG, gpio_config, int, struct device *, port, int, access_op, u32_t, pin, int, flags);

K_SYSCALL_DECLARE4(K_SYSCALL_GPIO_WRITE, gpio_write, int, struct device *, port, int, access_op, u32_t, pin, u32_t, value);

K_SYSCALL_DECLARE4(K_SYSCALL_GPIO_READ, gpio_read, int, struct device *, port, int, access_op, u32_t, pin, u32_t *, value);

K_SYSCALL_DECLARE3(K_SYSCALL_GPIO_ENABLE_CALLBACK, gpio_enable_callback, int, struct device *, port, int, access_op, u32_t, pin);

K_SYSCALL_DECLARE3(K_SYSCALL_GPIO_DISABLE_CALLBACK, gpio_disable_callback, int, struct device *, port, int, access_op, u32_t, pin);

K_SYSCALL_DECLARE1(K_SYSCALL_GPIO_GET_PENDING_INT, gpio_get_pending_int, int, struct device *, dev);

#ifdef __cplusplus
}
#endif

#endif
